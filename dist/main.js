(()=>{"use strict";function l(t){if(1===t.length)return t;{const e=Math.ceil(t.length/2);let n=l(t.slice(0,e)),i=l(t.slice(e)),r=[];for(;n[0]||i[0];)n[0]<i[0]?(r.push(n[0]),n.shift()):i[0]<n[0]?(r.push(i[0]),i.shift()):n[0]==i[0]?(r.push(n[0]),r.push(i[0]),n.shift(),i.shift()):n[0]?i[0]||(r.push(n[0]),n.shift()):(r.push(i[0]),i.shift());return r}}class t{constructor(l){this.data=l,this.left=null,this.right=null}}function e(l){if(0===l.length)return null;{const n=Math.floor(l.length/2),i=new t(l[n]);return i.left=e(l.slice(0,n)),i.right=e(l.slice(n+1)),i}}const n=(l,t="",e=!0)=>{null!==l&&(null!==l.right&&n(l.right,`${t}${e?"│   ":"    "}`,!1),console.log(`${t}${e?"└── ":"┌── "}${l.data}`),null!==l.left&&n(l.left,`${t}${e?"    ":"│   "}`,!0))};let i=new class{constructor(t){this.root=function(t){let n=l(t);return e([...new Set(n)])}(t)}insert(l){!function l(e,n){if(n<e.data&&null==e.left){const l=new t(n);e.left=l}else if(n>e.data&&null==e.right){const l=new t(n);e.right=l}else{if(n<e.data)return l(e.left,n);if(n>e.data)return l(e.right,n);if(n==e.data)return void console.log("value already in tree, try another value")}}(this.root,l)}delete(l){!function l(t,e){if(console.log(t),t.left.data===e&&null===t.left.left&&null===t.left.right)t.left=null,console.log("a");else if(t.right.data===e&&null===t.right.left&&null===t.right.right)t.right=null,console.log("b");else if(t.left.data===e&&null!==t.left.left&&null===t.left.left.left&&null===t.left.left.right&&null===t.left.right)t.left=t.left.left,console.log("c");else if(t.left.data===e&&null!==t.left.right&&null===t.left.right.left&&null===t.left.right.right&&null===t.left.left)t.left=t.left.right,console.log("d");else if(t.right.data===e&&null!==t.right.left&&null===t.right.left.left&&null===t.right.left.right&&null===t.right.right)t.right=t.right.left,console.log("e");else if(t.right.data===e&&null!==t.right.right&&null===t.right.right.left&&null===t.right.right.right&&null===t.right.left)t.right=t.right.right,console.log("f");else if(t.data===e&&null!==t.left&&null!==t.right){let l=t.right,e=l;for(;null!==l.left;)e=l,l=l.left;t.data=l.data,e.left=null,console.log("g")}else{if(null===t.left||null===t.right)return console.log("value not found"),void console.log("h");if(e<t.data)return l(t.left,e);if(e>t.data)return l(t.right,e)}}(this.root,l)}}([1,7,4,23,8,9,4,3,5,7,9,67,6345,324]);i.insert(9),i.delete(677),n(i.root)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,