(()=>{"use strict";function t(l){if(1===l.length)return l;{const e=Math.ceil(l.length/2);let n=t(l.slice(0,e)),o=t(l.slice(e)),s=[];for(;n[0]||o[0];)n[0]<o[0]?(s.push(n[0]),n.shift()):o[0]<n[0]?(s.push(o[0]),o.shift()):n[0]==o[0]?(s.push(n[0]),s.push(o[0]),n.shift(),o.shift()):n[0]?o[0]||(s.push(n[0]),n.shift()):(s.push(o[0]),o.shift());return s}}class l{constructor(t){this.data=t,this.left=null,this.right=null}}function e(t){if(0===t.length)return null;{const n=Math.floor(t.length/2),o=new l(t[n]);return o.left=e(t.slice(0,n)),o.right=e(t.slice(n+1)),o}}const n=(t,l="",e=!0)=>{null!==t&&(null!==t.right&&n(t.right,`${l}${e?"│   ":"    "}`,!1),console.log(`${l}${e?"└── ":"┌── "}${t.data}`),null!==t.left&&n(t.left,`${l}${e?"    ":"│   "}`,!0))};let o=new class{constructor(l){this.root=function(l){let n=t(l);return e([...new Set(n)])}(l)}insert(t){!function t(e,n){if(n<e.data&&null==e.left){const t=new l(n);e.left=t,console.log("a")}else if(n>e.data&&null==e.right){const t=new l(n);e.right=t,console.log("b")}else{if(n<e.data)return console.log("c"),t(e.left,n);if(n>e.data)return console.log("d"),t(e.right,n);if(n==e.data)return console.log("e"),void console.log("value already in tree, try another value")}}(this.root,t)}}([1,7,4,23,8,9,4,3,5,7,9,67,6345,324]);n(o.root),o.insert(9),n(o.root)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,