(()=>{"use strict";function t(l){if(1===l.length)return l;{const h=Math.ceil(l.length/2);let r=t(l.slice(0,h)),e=t(l.slice(h)),n=[];for(;r[0]||e[0];)r[0]<e[0]?(n.push(r[0]),r.shift()):e[0]<r[0]?(n.push(e[0]),e.shift()):r[0]==e[0]?(n.push(r[0]),n.push(e[0]),r.shift(),e.shift()):r[0]?e[0]||(n.push(r[0]),r.shift()):(n.push(e[0]),e.shift());return n}}class l{constructor(t){this.array=t,this.root=null,this.leftChildren=null,this.rightChildren=null}}function h(t){if(0===t.length)return t;const r=new l(t),e=Math.floor(t.length/2);return r.root=t[e],r.leftChildren=r.array.slice(0,e),r.rightChildren=r.array.slice(e+1),console.log(r.root),h(r.leftChildren),h(r.rightChildren),r.root}console.log("h"),function(l){let r=t([1,7,4,23,8,9,4,3,5,7,9,67,6345,324]),e=[...new Set(r)];console.log(e),h(e)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQU8sU0FBU0EsRUFBVUMsR0FDdEIsR0FBcUIsSUFBakJBLEVBQU1DLE9BQWMsT0FBT0QsRUFDMUIsQ0FDRCxNQUFNRSxFQUFPQyxLQUFLQyxLQUFLSixFQUFNQyxPQUFPLEdBSXBDLElBQUlJLEVBQWlCTixFQUZKQyxFQUFNTSxNQUFNLEVBQUdKLElBTTVCSyxFQUFrQlIsRUFGSkMsRUFBTU0sTUFBTUosSUFLMUJNLEVBQWMsR0FDbEIsS0FBT0gsRUFBZSxJQUFNRSxFQUFnQixJQUNwQ0YsRUFBZSxHQUFLRSxFQUFnQixJQUNwQ0MsRUFBWUMsS0FBS0osRUFBZSxJQUNoQ0EsRUFBZUssU0FDUkgsRUFBZ0IsR0FBS0YsRUFBZSxJQUMzQ0csRUFBWUMsS0FBS0YsRUFBZ0IsSUFDakNBLEVBQWdCRyxTQUdUTCxFQUFlLElBQU1FLEVBQWdCLElBQzVDQyxFQUFZQyxLQUFLSixFQUFlLElBQ2hDRyxFQUFZQyxLQUFLRixFQUFnQixJQUNqQ0YsRUFBZUssUUFDZkgsRUFBZ0JHLFNBRVJMLEVBQWUsR0FHZkUsRUFBZ0IsS0FDeEJDLEVBQVlDLEtBQUtKLEVBQWUsSUFDaENBLEVBQWVLLFVBSmZGLEVBQVlDLEtBQUtGLEVBQWdCLElBQ2pDQSxFQUFnQkcsU0FNeEIsT0FBT0YsQ0FDWCxDQUNKLENDdENBLE1BQU1HLEVBQ0YsV0FBQUMsQ0FBWVosR0FDUmEsS0FBS2IsTUFBUUEsRUFDYmEsS0FBS0MsS0FBTyxLQUNaRCxLQUFLRSxhQUFlLEtBQ3BCRixLQUFLRyxjQUFnQixJQUN6QixFQVVKLFNBQVNDLEVBQW1CakIsR0FDeEIsR0FBcUIsSUFBakJBLEVBQU1DLE9BQWMsT0FBT0QsRUFFM0IsTUFBTWtCLEVBQU8sSUFBSVAsRUFBS1gsR0FDaEJtQixFQUFjaEIsS0FBS2lCLE1BQU1wQixFQUFNQyxPQUFPLEdBUzVDLE9BUkFpQixFQUFLSixLQUFPZCxFQUFNbUIsR0FFbEJELEVBQUtILGFBQWVHLEVBQUtsQixNQUFNTSxNQUFNLEVBQUdhLEdBQ3hDRCxFQUFLRixjQUFnQkUsRUFBS2xCLE1BQU1NLE1BQU1hLEVBQWMsR0FFcERFLFFBQVFDLElBQUlKLEVBQUtKLE1BQ2pCRyxFQUFtQkMsRUFBS0gsY0FDeEJFLEVBQW1CQyxFQUFLRixlQUNqQkUsRUFBS0osSUFDcEIsQ0MxQkFPLFFBQVFDLElBQUksS0RJTCxTQUFtQnRCLEdBQ2xCLElBQUl1QixFQUFjeEIsRUNQUixDQUFDLEVBQUcsRUFBRyxFQUFHLEdBQUksRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUFJLEtBQU0sTURRbkR5QixFQUFvQixJQUFLLElBQUlDLElBQUlGLElBRXJDRixRQUFRQyxJQUFJRSxHQUNaUCxFQUFtQk8sRUFDdkIsQ0NUSkUsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvcC1iYWxhbmNlZC1iaW5hcnktc2VhcmNoLXRyZWUvLi9zcmMvbWVyZ2VTb3J0LmpzIiwid2VicGFjazovL3RvcC1iYWxhbmNlZC1iaW5hcnktc2VhcmNoLXRyZWUvLi9zcmMvYmluYXJ5U2VhcmNoVHJlZS5qcyIsIndlYnBhY2s6Ly90b3AtYmFsYW5jZWQtYmluYXJ5LXNlYXJjaC10cmVlLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBtZXJnZVNvcnQoYXJyYXkpIHtcbiAgICBpZiAoYXJyYXkubGVuZ3RoID09PSAxKSByZXR1cm4gYXJyYXk7XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGhhbGYgPSBNYXRoLmNlaWwoYXJyYXkubGVuZ3RoLzIpXG4gICAgICAgIC8vIHNwbGl0IGFycmF5IGluIGhhbGZcbiAgICAgICAgY29uc3QgbGVmdEhhbGYgPSBhcnJheS5zbGljZSgwLCBoYWxmKVxuICAgICAgICAvLyBjYWxsIG1lcmdlU29ydCBvbiB0aGUgbGVmdCBoYWxmXG4gICAgICAgIGxldCBzb3J0ZWRMZWZ0SGFsZiA9IG1lcmdlU29ydChsZWZ0SGFsZilcblxuICAgICAgICBjb25zdCByaWdodEhhbGYgPSBhcnJheS5zbGljZShoYWxmKVxuICAgICAgICAvLyBjYWxsIG1lcmdlU29ydCBvbiB0aGUgcmlnaHQgaGFsZlxuICAgICAgICBsZXQgc29ydGVkUmlnaHRIYWxmID0gbWVyZ2VTb3J0KHJpZ2h0SGFsZik7XG5cbiAgICAgICAgLy9mb3IgZWFjaCBlbGVtZW50IGluIGxlZnQgaGFsZiBhbmQgcmlnaHQgaGFsZiwgc2VlIHdoaWNoIGlzIHNtYWxsZXJcbiAgICAgICAgbGV0IG1lcmdlZEFycmF5ID0gW107XG4gICAgICAgIHdoaWxlIChzb3J0ZWRMZWZ0SGFsZlswXSB8fCBzb3J0ZWRSaWdodEhhbGZbMF0pIHtcbiAgICAgICAgICAgIGlmIChzb3J0ZWRMZWZ0SGFsZlswXSA8IHNvcnRlZFJpZ2h0SGFsZlswXSkge1xuICAgICAgICAgICAgICAgIG1lcmdlZEFycmF5LnB1c2goc29ydGVkTGVmdEhhbGZbMF0pXG4gICAgICAgICAgICAgICAgc29ydGVkTGVmdEhhbGYuc2hpZnQoKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChzb3J0ZWRSaWdodEhhbGZbMF0gPCBzb3J0ZWRMZWZ0SGFsZlswXSkge1xuICAgICAgICAgICAgICAgIG1lcmdlZEFycmF5LnB1c2goc29ydGVkUmlnaHRIYWxmWzBdKVxuICAgICAgICAgICAgICAgIHNvcnRlZFJpZ2h0SGFsZi5zaGlmdCgpXG5cbiAgICAgICAgICAgICAgICAvLyBlZGdlIGNhc2Ugd2hlcmUgdGhlIHNhbWUgbnVtYmVyIGlzIGJlaW5nIGNvbXBhcmVkXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNvcnRlZExlZnRIYWxmWzBdID09IHNvcnRlZFJpZ2h0SGFsZlswXSkge1xuICAgICAgICAgICAgICAgIG1lcmdlZEFycmF5LnB1c2goc29ydGVkTGVmdEhhbGZbMF0pXG4gICAgICAgICAgICAgICAgbWVyZ2VkQXJyYXkucHVzaChzb3J0ZWRSaWdodEhhbGZbMF0pXG4gICAgICAgICAgICAgICAgc29ydGVkTGVmdEhhbGYuc2hpZnQoKVxuICAgICAgICAgICAgICAgIHNvcnRlZFJpZ2h0SGFsZi5zaGlmdCgpXG4gICAgICAgICAgICAgICAgLy8gZWRnZSBjYXNlIHdoZXJlIG9uZSBhcnJheSBpcyBlbXB0eVxuICAgICAgICAgICAgfSBlbHNlIGlmICghc29ydGVkTGVmdEhhbGZbMF0pIHtcbiAgICAgICAgICAgICAgICBtZXJnZWRBcnJheS5wdXNoKHNvcnRlZFJpZ2h0SGFsZlswXSlcbiAgICAgICAgICAgICAgICBzb3J0ZWRSaWdodEhhbGYuc2hpZnQoKVxuICAgICAgICAgICAgfSBlbHNlIGlmICghc29ydGVkUmlnaHRIYWxmWzBdKSB7XG4gICAgICAgICAgICAgICAgbWVyZ2VkQXJyYXkucHVzaChzb3J0ZWRMZWZ0SGFsZlswXSlcbiAgICAgICAgICAgICAgICBzb3J0ZWRMZWZ0SGFsZi5zaGlmdCgpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZXJnZWRBcnJheTtcbiAgICB9XG59IiwiaW1wb3J0IHsgbWVyZ2VTb3J0IH0gZnJvbSBcIi4vbWVyZ2VTb3J0XCI7XG5cbmNsYXNzIFRyZWUge1xuICAgIGNvbnN0cnVjdG9yKGFycmF5KSB7XG4gICAgICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbiAgICAgICAgdGhpcy5yb290ID0gbnVsbDtcbiAgICAgICAgdGhpcy5sZWZ0Q2hpbGRyZW4gPSBudWxsO1xuICAgICAgICB0aGlzLnJpZ2h0Q2hpbGRyZW4gPSBudWxsO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBidWlsZFRyZWUoYXJyYXkpIHtcbiAgICAgICAgbGV0IHNvcnRlZEFycmF5ID0gbWVyZ2VTb3J0KGFycmF5KVxuICAgICAgICBsZXQgcmVtb3ZlZER1cGxpY2F0ZXMgPSBbLi4uIG5ldyBTZXQoc29ydGVkQXJyYXkpXVxuXG4gICAgICAgIGNvbnNvbGUubG9nKHJlbW92ZWREdXBsaWNhdGVzKVxuICAgICAgICByZWN1cnNpdmVCdWlsZFRyZWUocmVtb3ZlZER1cGxpY2F0ZXMpXG4gICAgfVxuXG5mdW5jdGlvbiByZWN1cnNpdmVCdWlsZFRyZWUoYXJyYXkpIHtcbiAgICBpZiAoYXJyYXkubGVuZ3RoID09PSAwKSByZXR1cm4gYXJyYXk7XG4gICAgLy8gZWxzZSB7XG4gICAgICAgIGNvbnN0IHRyZWUgPSBuZXcgVHJlZShhcnJheSlcbiAgICAgICAgY29uc3QgbWlkZGxlSW5kZXggPSBNYXRoLmZsb29yKGFycmF5Lmxlbmd0aC8yKVxuICAgICAgICB0cmVlLnJvb3QgPSBhcnJheVttaWRkbGVJbmRleF1cbiAgICAgICAgICAgIFxuICAgICAgICB0cmVlLmxlZnRDaGlsZHJlbiA9IHRyZWUuYXJyYXkuc2xpY2UoMCwgbWlkZGxlSW5kZXgpXG4gICAgICAgIHRyZWUucmlnaHRDaGlsZHJlbiA9IHRyZWUuYXJyYXkuc2xpY2UobWlkZGxlSW5kZXggKyAxKVxuXG4gICAgICAgIGNvbnNvbGUubG9nKHRyZWUucm9vdClcbiAgICAgICAgcmVjdXJzaXZlQnVpbGRUcmVlKHRyZWUubGVmdENoaWxkcmVuKVxuICAgICAgICByZWN1cnNpdmVCdWlsZFRyZWUodHJlZS5yaWdodENoaWxkcmVuKVxuICAgICAgICByZXR1cm4gdHJlZS5yb290O1xufSIsImltcG9ydCB7IGJ1aWxkVHJlZSB9IGZyb20gXCIuL2JpbmFyeVNlYXJjaFRyZWVcIjtcblxuXG5cbmNvbnN0IHRlc3RBcnJheSA9IFsxLCA3LCA0LCAyMywgOCwgOSwgNCwgMywgNSwgNywgOSwgNjcsIDYzNDUsIDMyNF1cblxuY29uc29sZS5sb2coJ2gnKVxuYnVpbGRUcmVlKHRlc3RBcnJheSkiXSwibmFtZXMiOlsibWVyZ2VTb3J0IiwiYXJyYXkiLCJsZW5ndGgiLCJoYWxmIiwiTWF0aCIsImNlaWwiLCJzb3J0ZWRMZWZ0SGFsZiIsInNsaWNlIiwic29ydGVkUmlnaHRIYWxmIiwibWVyZ2VkQXJyYXkiLCJwdXNoIiwic2hpZnQiLCJUcmVlIiwiY29uc3RydWN0b3IiLCJ0aGlzIiwicm9vdCIsImxlZnRDaGlsZHJlbiIsInJpZ2h0Q2hpbGRyZW4iLCJyZWN1cnNpdmVCdWlsZFRyZWUiLCJ0cmVlIiwibWlkZGxlSW5kZXgiLCJmbG9vciIsImNvbnNvbGUiLCJsb2ciLCJzb3J0ZWRBcnJheSIsInJlbW92ZWREdXBsaWNhdGVzIiwiU2V0IiwiYnVpbGRUcmVlIl0sInNvdXJjZVJvb3QiOiIifQ==